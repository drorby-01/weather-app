{"version":3,"sources":["nav-bar/AppNav.tsx","favorites-page/Favorites.tsx","redux/Actions.ts","redux/CountryWeather.action.ts","Api.ts","Weather.ts","home-page/BackgroundTheme/BackgroundTheme.tsx","redux/Theme/Theme.action.ts","home-page/CityWeather/CityWeather.tsx","home-page/FavoriteButton/BtnFavorite.tsx","redux/FsvoritesWeather/Favorites.action.ts","home-page/fiveDayWeather/FiveDayWeather.tsx","home-page/SearchBar/SearchBar.tsx","home-page/Home.tsx","app-routes/AppRoutes.tsx","App.tsx","reportWebVitals.ts","redux/CountryWeather.reducer.ts","redux/FsvoritesWeather/Favorites.reducer.ts","redux/Theme/Theme.reducer.ts","redux/store.ts","index.tsx"],"names":["AppNav","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","style","color","marginRight","Favorites","state","useSelector","FavoriteReducer","favorites","length","height","width","display","alignItems","map","element","Card","Body","city","tempatureValue","tempatureUnit","locationKey","ACTIONS","setCountryWeather","cityWeather","type","payload","Api","url","axios","get","result","console","log","DEFAULTKEY","getWather","cityName","getLocationKey","a","apiGetCall","data","Array","isArray","Key","Temperature","Metric","Value","Unit","getFiveDayWeather","cityKey","DailyForecasts","getTempatureForFiveDays","index","Minimum","Maximum","BackgroundTheme","useState","background","setBackground","dispatch","useDispatch","ThemeBackgroundColor","Button","variant","onClick","CityWeather","weatherReducer","BtnFavorite","weather","FiveDayWeather","weatherTempatures","setweatherTemaptures","useEffect","weatherArray","weatherApi","getDay","Intl","DateTimeFormat","weekday","format","Date","setDate","getDate","padding","SearchBar","setState","getCityWeather","value","onChange","target","Home","then","AppRoutes","path","component","exact","App","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","initialState","store","createStore","combineReducers","action","copyState","find","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bafc3aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AppNav = () => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" expand=\"lg\" >\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavLink to=\"/\" style={{color:\"white\",marginRight:\"10px\"}}>Home</NavLink>\r\n            <NavLink to=\"/favorites\" style={{color:\"white\"}}>Favorite</NavLink>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { IWheater } from '../redux/CountryWeather.action'\r\n\r\nconst Favorites = () => {\r\n\r\n\r\n    const state:Array<IWheater> = useSelector((state:any)=>state.FavoriteReducer.favorites)\r\n\r\n    if(state.length === 0) return <div style={{height:\"100vh\",width:\"100vw\",display:\"flex\",alignItems:\"center\"}}> <h1>No Favorite Weather where found</h1></div>\r\n    return (\r\n        <div>\r\n            {\r\n                state.map((element:IWheater)=>(\r\n                    <Card key={element.locationKey} className=\"p-2\">\r\n                        <Card.Body> City: {element.city}</Card.Body>\r\n                        <Card.Body> Tempature: {element.tempatureValue} {element.tempatureUnit}</Card.Body>\r\n                    </Card>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites\r\n","export const ACTIONS = {\r\n    COUNTRY_WEATHER:\"COUNTRY_WEATHER\",\r\n    THEME_BACKGROUND:\"THEME_BACKGROUND\",\r\n    FAVORITES_COUNTRIES:\"FAVORITES_COUNTRIES\"\r\n}","import { ACTIONS } from \"./Actions\"\r\n\r\n\r\nexport interface IWheater{\r\n    city:string,\r\n    tempatureValue:string,\r\n    tempatureUnit:string,\r\n    locationKey:string\r\n}\r\n\r\n\r\nexport const setCountryWeather=(cityWeather:IWheater)=>{\r\n    return {\r\n        type:ACTIONS.COUNTRY_WEATHER,\r\n        payload:cityWeather\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default class Api {\r\n  public static async apiGetCall(url: string) {\r\n    try {\r\n      const result = await axios.get(url);\r\n      return result;\r\n    } catch (error) {\r\n      console.log(\"there is an error\");\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","import Api from \"./Api\";\r\nimport { IWheater } from \"./redux/CountryWeather.action\";\r\n\r\nconst DEFAULTKEY = \"215854\" //tel aviv key\r\n\r\nexport async function getWather(cityName:string):Promise<IWheater> {\r\n\r\n    async function getLocationKey(){\r\n     if (cityName) {\r\n         const {data}:any = await Api.apiGetCall(\r\n           `http://dataservice.accuweather.com/locations/v1/cities/search?apikey=ocrDdRGpBaGDnjg0FzOSnKAgBU9LGd08&q=${cityName}`\r\n         );\r\n         if(Array.isArray(data) && data.length !== 0 ){\r\n             console.log(data[0].Key)\r\n           return data[0].Key //get the key from the location api     \r\n         }else return DEFAULTKEY;\r\n       }\r\n    }\r\n     const locationKey:string = await getLocationKey()\r\n     const city:string = locationKey === DEFAULTKEY ? \"tel aviv\": cityName;\r\n     try{\r\n      const {data}:any = await Api.apiGetCall(`http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=ocrDdRGpBaGDnjg0FzOSnKAgBU9LGd08`)\r\n      const tempatureValue:string = data[0].Temperature.Metric.Value;\r\n     const tempatureUnit:string = data[0].Temperature.Metric.Unit; \r\n     return {city,tempatureValue,tempatureUnit,locationKey}\r\n     }\r\n     catch(error){\r\n      return{city:\"\",tempatureValue:\"\",tempatureUnit:\"\",locationKey:\"\"}\r\n     }\r\n     \r\n     \r\n}\r\n\r\n\r\nexport async function getFiveDayWeather(cityKey:string =DEFAULTKEY): Promise<string[]> {// i will get it from redux\r\n  \r\nconst {data}:any = await Api.apiGetCall(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=ocrDdRGpBaGDnjg0FzOSnKAgBU9LGd08&metric=true`);\r\nconst {DailyForecasts}  = data ;\r\nconst getTempatureForFiveDays = DailyForecasts.map((element:any,index:number) => `${element.Temperature.Minimum.Value} ${element.Temperature.Minimum.Unit} - ${element.Temperature.Maximum.Value} ${element.Temperature.Maximum.Unit} ` )\r\nreturn getTempatureForFiveDays;\r\n}","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeTheme } from \"../../redux/Theme/Theme.action\";\r\n\r\nconst BackgroundTheme = () => {\r\n  const [background, setBackground] = useState(\"dark\");\r\n  const dispatch = useDispatch();\r\n  \r\n  const theme = useSelector(\r\n    (state: any) => state.ThemeBackgroundColor.background\r\n  );\r\n\r\n  \r\n  const backgroundTheme = () => {\r\n    dispatch(changeTheme()); // will change the background any time we click\r\n    const newBackground = background === \"dark\" ? \"light\" : \"dark\";\r\n    setBackground(newBackground); // will change the button\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant={background} onClick={backgroundTheme} className=\"m-1\">\r\n        {background}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BackgroundTheme;\r\n","import { ACTIONS } from \"../Actions\"\r\n\r\nexport const changeTheme=()=>{\r\n    return {\r\n        type:ACTIONS.THEME_BACKGROUND\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IWheater, setCountryWeather } from \"../../redux/CountryWeather.action\";\r\nimport { getWather } from \"../../Weather\";\r\n\r\nconst CityWeather = () => {\r\n  const cityWeather: IWheater = useSelector(\r\n    (state: any) => state.weatherReducer\r\n  );\r\n\r\n  return (\r\n    <aside>\r\n      <Card>\r\n        <Card.Body>City: {cityWeather.city} </Card.Body>\r\n        <Card.Body>Tempature: {cityWeather.tempatureValue} {cityWeather.tempatureUnit} </Card.Body>\r\n      </Card>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default CityWeather;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IWheater } from \"../../redux/CountryWeather.action\";\r\nimport { addToFavorites } from \"../../redux/FsvoritesWeather/Favorites.action\";\r\nimport \"./BtnFavorite.css\";\r\nconst BtnFavorite = () => {\r\n  const weather: IWheater = useSelector((state: any) => state.weatherReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addFavorites = () => {\r\n    dispatch(addToFavorites(weather));\r\n  };\r\n\r\n  return (\r\n    <div className=\"ml-auto\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-danger m-1\"\r\n        onClick={addFavorites}\r\n      >\r\n        Love\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BtnFavorite;\r\n","import { ACTIONS } from \"../Actions\";\r\nimport { IWheater } from \"../CountryWeather.action\";\r\n\r\nexport const addToFavorites=(country:IWheater)=>{\r\n            return {\r\n                type: ACTIONS.FAVORITES_COUNTRIES,\r\n                payload:country\r\n            }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IWheater } from \"../../redux/CountryWeather.action\";\r\nimport { getFiveDayWeather } from \"../../Weather\";\r\nimport \"./FiveDayWeather.css\";\r\nconst FiveDayWeather = () => {\r\n  const weather: IWheater = useSelector((state: any) => state.weatherReducer);\r\n  const [weatherTempatures, setweatherTemaptures] = useState<Array<string>>([]);\r\n\r\n  useEffect(() => {\r\n    async function weatherApi() {\r\n      const weatherArray: Array<string> = await getFiveDayWeather(\r\n        weather.locationKey\r\n      );\r\n      setweatherTemaptures(weatherArray);\r\n    }\r\n\r\n    weatherApi();\r\n  }, []);\r\n\r\n  const getDay = (index: number) => {\r\n    return new Intl.DateTimeFormat(\"en-US\", { weekday: \"long\" }).format(\r\n      new Date().setDate(new Date().getDate() + index)\r\n    );\r\n  };\r\n\r\n  return (\r\n<>\r\n    <h1>The Weather For The Five Day</h1>\r\n    <div className=\"fiveDay\">\r\n      {weatherTempatures.map((element: string, index) => (\r\n        <div className=\"card \" style={{width:\"auto\",padding:\"20px\"}}>\r\n          <p className=\"card-text\"> Day : {getDay(index)}</p>\r\n          <p className=\"card-text\">City:{weather.city}</p>\r\n          <p className=\"card-text\">Tempature:{element}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiveDayWeather;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Api from \"../../Api\";\r\nimport { IWheater, setCountryWeather } from \"../../redux/CountryWeather.action\";\r\nimport { getWather } from \"../../Weather\";\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const getCityWeather = async () => {\r\n    const weather: IWheater = await getWather(state);\r\n    console.log(weather);\r\n    dispatch(setCountryWeather(weather));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control col-lg-2 col-xl-3 col-md-4 col-sm-6 col-7 d-inline m-1\"\r\n        value={state}\r\n        onChange={({ target }) => setState(target.value)}\r\n      />\r\n      <Button onClick={getCityWeather} className=\"m-1\">\r\n        Search\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCountryWeather } from \"../redux/CountryWeather.action\";\r\nimport { getWather } from \"../Weather\";\r\nimport BackgroundTheme from \"./BackgroundTheme/BackgroundTheme\";\r\nimport CityWeather from \"./CityWeather/CityWeather\";\r\nimport BtnFavorite from \"./FavoriteButton/BtnFavorite\";\r\nimport FiveDayWeather from \"./fiveDayWeather/FiveDayWeather\";\r\nimport \"./Home.css\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getWather(\"tel aviv\").then((data) => {\r\n      console.log(data);\r\n      dispatch(setCountryWeather(data));\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <header className=\"row m-1\">\r\n         \r\n        <SearchBar />\r\n        <BackgroundTheme/>\r\n        <BtnFavorite/>\r\n      </header>\r\n      <aside className=\"col-lg-3 col-md-7 col-xl-3 col-sm-7 col-10 p-0\">\r\n        <CityWeather />\r\n      </aside>\r\n      <footer>\r\n        <FiveDayWeather />\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport {Switch,Route} from \"react-router-dom\"\r\nimport Favorites from '../favorites-page/Favorites'\r\nimport Home from '../home-page/Home'\r\nconst AppRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" component={Home} exact/>\r\n            <Route path=\"/favorites\" component={Favorites}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRoutes\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppNav from \"./nav-bar/AppNav\";\nimport AppRoutes from \"./app-routes/AppRoutes\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const background: string = useSelector(\n    (state: any) => state.ThemeBackgroundColor.background\n  );\n\n  return (\n    <div style={{ backgroundColor: background }} className=\"base\">\n      <nav>\n        <AppNav />\n      </nav>\n      <main >\n        <AppRoutes />\n      </main>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ACTIONS } from \"./Actions\";\r\nimport {  IWheater } from \"./CountryWeather.action\"\r\n\r\nconst initalState = {\r\n    locationKey:\"215854\",\r\n    city:\"\",\r\n    tempatureValue:\"\",\r\n    tempatureUnit:\"C\"\r\n}\r\n\r\nexport interface IAction { \r\n    type:string,\r\n    payload:IWheater\r\n}\r\n\r\nexport const weatherReducer = (state:IWheater=initalState , action:IAction )=>{\r\n\r\n    const copyState = {...state};\r\n\r\n    switch(action.type){\r\n        case ACTIONS.COUNTRY_WEATHER : {console.log(action.payload); return action.payload;}\r\n    }\r\n    return copyState;\r\n}","import { ACTIONS } from \"../Actions\";\r\nimport { IWheater } from \"../CountryWeather.action\";\r\nimport { IAction } from \"../CountryWeather.reducer\";\r\n\r\nconst initialState: IFavorites = {\r\n  favorites: [],\r\n};\r\n\r\ninterface IFavorites {\r\n  favorites: Array<IWheater>;\r\n}\r\n\r\nexport const FavoriteReducer = (\r\n  state: IFavorites = initialState,\r\n  action: IAction\r\n) => {\r\n  const copyState = { ...state };\r\n\r\n  switch (action.type) {\r\n    case ACTIONS.FAVORITES_COUNTRIES: {\r\n      const { payload } = action;\r\n      const weather:IWheater|undefined = copyState.favorites.find(((element:IWheater)=> element.locationKey === payload.locationKey))\r\n      if(!weather)//if it undifiend we need to insert to the array \r\n      copyState.favorites.push(payload)\r\n      return copyState;\r\n    }\r\n  }\r\n  return copyState;\r\n};\r\n","import { ACTIONS } from \"../Actions\";\r\nimport { IAction } from \"../CountryWeather.reducer\";\r\n\r\nconst initalState = {\r\n  background: \"white\",\r\n};\r\n\r\nexport const ThemeBackground = (state:{background:string} = initalState, action: IAction) => {\r\n  const copyState = {...state};\r\n  switch (action.type) {\r\n    case ACTIONS.THEME_BACKGROUND:{\r\n      return state.background === \"white\" ? {background:\"black\"}:{background:\"white\"}\r\n      \r\n    }\r\n     \r\n  }\r\n  return copyState\r\n};\r\n","import {createStore,combineReducers} from \"redux\"\r\nimport { weatherReducer } from \"./CountryWeather.reducer\"\r\nimport { FavoriteReducer } from \"./FsvoritesWeather/Favorites.reducer\"\r\nimport { ThemeBackground } from \"./Theme/Theme.reducer\"\r\n\r\n\r\n\r\nconst store = createStore(combineReducers({weatherReducer,ThemeBackgroundColor:ThemeBackground,FavoriteReducer:FavoriteReducer}))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}